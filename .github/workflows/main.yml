
name: CI-CD

env:
  COMMIT: ${{ github.sha }}
  NODE_ENV: production
  NODE_VERSION: 14.x

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  integration:

    runs-on: ubuntu-latest

    environment: storage

    steps:

    - name: Checkout code updates
      uses: actions/checkout@v2

    - name: Use node ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Enable pipefail
      run: set -o pipefail

    - name: Clone dependencies
      run: npm ci | tee -a integration.log
      env:
        NODE_ENV: 'development'

    - name: Build artifacts
      run: npm run build | tee -a integration.log

    - name: Run unit tests
      run: npm test | tee -a integration.log

    - name: Create tarball
      run: |
        echo ${{ github.sha }} > version
        rm -rf .git .github .gitignore
        tar -cvf build-${{ env.NODE_VERSION }}-${{ github.sha }}.tar . | tee -a integration.log

    - name: Disable pipefail
      run: set +o pipefail

    - name: Configure Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-west-2
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
        #role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        #mask-aws-account-id: true
        #role-duration-seconds: 300
        #role-session-name: GitHubActions
        #role-skip-session-tagging: true

    - name: Upload artifacts
      run: aws s3 cp . s3://${{ secrets.STORAGE_BUCKET }}/${{ github.sha }} --recursive --exclude "*" --include "*.log" --include "*.tar"

    #- name: Upload artifacts
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: builds
    #    path: build-${{ env.NODE_VERSION }}-${{ github.sha }}.tar


  acceptance:

    needs: integration

    runs-on: ubuntu-latest

    environment: storage

    steps:

    #- name: Download artifacts
    #  uses: actions/download-artifact@v2
    #  with:
    #    name: builds

    - name: Configure Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-west-2
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Download artifacts
      run: aws s3 sync s3://${{ secrets.STORAGE_BUCKET }}/${{ github.sha }} .

    #- name: Unpack tarball
    #  run: tar -xf build-${{ env.NODE_VERSION }}-${{ github.sha }}.tar

    - name: Use node ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Run acceptance scenarios
      run: |
        set -o pipefail
        npm run scenario | tee -a acceptance.log

    - name: Upload artifacts
      run: aws s3 sync . s3://${{ secrets.STORAGE_BUCKET }}/${{ github.sha }}

    #- name: Upload artifacts
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: acceptance-${{ env.NODE_VERSION }}-${{ github.sha }}
    #    path: acceptance.log


  capacity:

    needs: integration

    runs-on: ubuntu-latest

    steps:

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: builds

    - name: Unpack tarball
      run: |
        tar -xf build-${{ env.NODE_VERSION }}-${{ github.sha }}.tar | tee -a capacity.log

    - name: Use node ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Run capacity scenarios
      run: |
        npm run capacity --if-present | tee -a capacity.log

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: capacity-${{ env.NODE_VERSION }}-${{ github.sha }}
        path: capacity.log


  deployment:

    needs: [ acceptance, capacity ]

    runs-on: ubuntu-latest

    environment: acceptance

    steps:

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: builds

    - name: Unpack tarball
      run: tar -xf build-${{ env.NODE_VERSION }}-${{ github.sha }}.tar

    - name: Use node ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'


  release:

    needs: deployment

    runs-on: ubuntu-latest

    environment: production

    steps:

    - name: Download artifacts
      uses: actions/download-artifact@v2

    - name: Debug logging
      run: tree .

