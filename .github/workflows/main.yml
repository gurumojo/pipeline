
name: CI-CD

env:
  AWS_REGION: us-west-2
  NODE_ENV: production
  NODE_VERSION: 14.x
  S3_PATH: ${{ secrets.STORAGE_BUCKET }}/${{ github.repository }}/${{ github.sha }}
  BUILD_PATH: ${{ github.repository }}/${{ github.sha }}

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  integration:

    runs-on: ubuntu-latest

    environment: storage

    steps:

    - name: Checkout code updates
      uses: actions/checkout@v2

    - name: Use node ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Clone dependencies
      run: |
        set -o pipefail
        cat package.json | tee -a integration.log
        npm ci 2>&1 | tee -a integration.log
      env:
        NODE_ENV: 'development'

    - name: Build artifacts
      run: |
        set -o pipefail
        npm run build --if-present 2>&1 | tee -a integration.log

    - name: Run unit tests
      run: |
        set -o pipefail
        npm test 2>&1 | tee -a integration.log

    - name: Create tarball
      run: |
        rm -rf .git .github .gitignore
        tar -cvf --exclude='*.log' ${{ env.NODE_VERSION }}.tar .
        rm -rf node_modules

    - name: Configure credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
        #role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        #mask-aws-account-id: true
        #role-duration-seconds: 300
        #role-session-name: GitHubActions
        #role-skip-session-tagging: true

    - name: Upload artifacts
      run: |
        aws s3 cp --no-progress . s3://${{ env.S3_PATH }} \
        --recursive --exclude "*" --include "*.log" --include "*.tar"


  acceptance:

    needs: integration

    runs-on: ubuntu-latest

    environment: storage

    steps:

    - name: Configure Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Download artifacts
      run: |
        set -o pipefail
        mkdir -p ${{ env.BUILD_PATH }}
        aws s3 sync --no-progress s3://${{ env.S3_PATH }} ${{ env.BUILD_PATH }} \
        2>&1 | tee -a ${{ env.BUILD_PATH }}/acceptance.log
        tar -xf ${{ env.BUILD_PATH }}/${{ env.NODE_VERSION }}.tar

    - name: Use node ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Run acceptance scenarios
      run: |
        set -o pipefail
        npm run scenario 2>&1 | tee -a ${{ env.BUILD_PATH }}/acceptance.log

    - name: Upload artifacts
      run: |
        aws s3 cp --no-progress \
        ${{ env.BUILD_PATH }}/acceptance.log s3://${{ env.S3_PATH }}/acceptance.log


  capacity:

    needs: integration

    runs-on: ubuntu-latest

    environment: storage

    steps:

    - name: Configure Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Download artifacts
      run: |
        set -o pipefail
        mkdir -p ${{ env.BUILD_PATH }}
        aws s3 sync --no-progress s3://${{ env.S3_PATH }} ${{ env.BUILD_PATH }} \
        2>&1 | tee -a ${{ env.BUILD_PATH }}/capacity.log
        tar -xf ${{ env.BUILD_PATH }}/${{ env.NODE_VERSION }}.tar

    - name: Use node ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Run capacity scenarios
      run: |
        set -o pipefail
        npm run capacity --if-present 2>&1 | tee -a ${{ env.BUILD_PATH }}/capacity.log

    - name: Upload artifacts
      run: |
        aws s3 cp --no-progress \
        ${{ env.BUILD_PATH }}/capacity.log s3://${{ env.S3_PATH }}/capacity.log


  deployment:

    needs: [ acceptance, capacity ]

    runs-on: ubuntu-latest

    environment: acceptance

    steps:

    - name: Configure Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Download artifacts
      run: |
        set -o pipefail
        mkdir -p ${{ env.BUILD_PATH }}
        aws s3 sync --no-progress s3://${{ env.S3_PATH }} ${{ env.BUILD_PATH }} \
        2>&1 | tee -a ${{ env.BUILD_PATH }}/deployment.log
        tar -xf ${{ env.BUILD_PATH }}/${{ env.NODE_VERSION }}.tar

    - name: Use node ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Upload artifacts
      run: |
        aws s3 cp --no-progress \
        ${{ env.BUILD_PATH }}/deployment.log s3://${{ env.S3_PATH }}/deployment.log


  release:

    needs: deployment

    runs-on: ubuntu-latest

    environment: production

    steps:

    - name: Configure Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Download artifacts
      run: |
        set -o pipefail
        mkdir -p ${{ env.BUILD_PATH }}
        aws s3 sync --no-progress s3://${{ env.S3_PATH }} ${{ env.BUILD_PATH }} \
        2>&1 | tee -a ${{ env.BUILD_PATH }}/release.log
        tar -xf ${{ env.BUILD_PATH }}/${{ env.NODE_VERSION }}.tar

    - name: Use node ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Debug logging
      run: |
        rm -rf integration.log gurumojo node_modules
        tree . | tee -a ${{ env.BUILD_PATH }}/release.log

    - name: Upload artifacts
      run: |
        aws s3 cp --no-progress \
        ${{ env.BUILD_PATH }}/release.log s3://${{ env.S3_PATH }}/release.log

